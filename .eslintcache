[{"D:\\wordG\\word-guess\\src\\index.js":"1","D:\\wordG\\word-guess\\src\\reportWebVitals.js":"2","D:\\wordG\\word-guess\\src\\App.js":"3","D:\\wordG\\word-guess\\src\\Modules\\Meat1.js":"4","D:\\wordG\\word-guess\\src\\Modules\\instruc.js":"5","D:\\wordG\\word-guess\\src\\Modules\\Menu.js":"6","D:\\wordG\\word-guess\\src\\Modules\\word.js":"7","D:\\wordG\\word-guess\\src\\Modules\\Def.js":"8","D:\\wordG\\word-guess\\src\\Modules\\DisplayW.js":"9","D:\\wordG\\word-guess\\src\\Modules\\PlayerInput.js":"10","D:\\wordG\\word-guess\\src\\Modules\\PlayArea.js":"11","D:\\wordG\\word-guess\\src\\Modules\\Hint.js":"12"},{"size":507,"mtime":1607908435119,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1825,"mtime":1607820309477,"results":"16","hashOfConfig":"14"},{"size":5123,"mtime":1608292254911,"results":"17","hashOfConfig":"14"},{"size":584,"mtime":1608250250217,"results":"18","hashOfConfig":"14"},{"size":317,"mtime":1607383334329,"results":"19","hashOfConfig":"14"},{"size":114,"mtime":1607485421939,"results":"20","hashOfConfig":"14"},{"size":1720,"mtime":1608158373853,"results":"21","hashOfConfig":"14"},{"size":1445,"mtime":1608291859964,"results":"22","hashOfConfig":"14"},{"size":1447,"mtime":1608321333068,"results":"23","hashOfConfig":"14"},{"size":3107,"mtime":1608321282674,"results":"24","hashOfConfig":"14"},{"size":415,"mtime":1608167195895,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ab1xr0",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\wordG\\word-guess\\src\\index.js",[],["54","55"],"D:\\wordG\\word-guess\\src\\reportWebVitals.js",[],"D:\\wordG\\word-guess\\src\\App.js",["56","57","58","59"],"// import './styler/bStyle.css';\n// import Meat1 from './Modules/Meat1';\n\n// function App() {\n  // return (\n  //   <div className=\"App\">\n  //     <h1 className=\"bTitle\">\n  //         Welcome To The Word Guesser\n  //       </h1>\n  //     <div className=\"mBody\">\n  //       <Meat1 />\n  //     </div>\n  //   </div>\n  // );\n// }\n\n// export default App;\nimport React, { Component } from 'react'\nimport './styler/bStyle.css';\nimport Meat1 from './Modules/Meat1';\nimport Instruc from './Modules/instruc';\nimport MenuDisplay from './Modules/Menu';\nimport { Spring, Transition, animated} from 'react-spring/renderprops';\n\nexport class App extends Component {\n  state = {\n    showMenu: true,\n    showInstruc: false,\n    showP: false,\n    showEnd: false\n  }\n\n  iToggle = e =>{\n    this.setState({\n      showMenu: !this.state.showMenu,\n      showInstruc: !this.state.showInstruc\n    });\n  }\n\n  pToggle = e =>{\n    this.setState({\n      showMenu: !this.state.showMenu,\n      showP: !this.state.showP\n    });\n  }\n\n  endToggle = e => {\n    this.setState({\n      showP: !this.state.showP,\n      showEnd: !this.state.showEnd\n    });\n  }\n\n  render() {\n    document.title = \"Word Test\";\n    return (\n      <div className=\"App\">\n        <h1 className=\"bTitle\">\n            Welcome To The Word Guesser\n        </h1>\n\n        <Spring\n          from={{opacity: 0, marginTop: -500}}\n          to={{opacity: 1, marginTop: 0}}\n          config={{duration: 500}}\n        >\n          {props => (\n            <div className=\"mBody\" style={props}>\n              <Meat1 sPlay={this.state.showP} sMenu={this.state.showMenu} sInstruc={this.state.showInstruc} showEnd={this.state.showEnd} iToggle={this.iToggle} pToggle={this.pToggle} eToggle={this.endToggle}/>\n            </div>\n          )}\n        </Spring>\n      </div>\n    );\n  }\n}\n\nexport default App\n\n","D:\\wordG\\word-guess\\src\\Modules\\Meat1.js",["60","61","62","63","64","65","66"],"import React from 'react';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport RW from './word';\r\nimport GD, { GDef } from './Def';\r\nimport WordDisplay from './DisplayW';\r\nimport PInput from './PlayerInput';\r\nimport PArea from './PlayArea';\r\nimport Instructions from './instruc';\r\n\r\n\r\nclass Meat1 extends React.Component{\r\n    state = {\r\n        WCorrect: [],\r\n        WSkip: []\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     let w = RW.GenerateWord();\r\n    //     GD.GDef(w).then((res) =>{\r\n    //         this.setState({CurrentW: res, Word: w});\r\n    //     })\r\n    //     console.log(this.state.CurrentW);\r\n    //     console.log(this.state.Word);\r\n    // }\r\n\r\n    // Checker = e =>{\r\n    //     let w = RW.GenerateWord();\r\n    //     GD.GDef(w).then((res) =>{\r\n    //         this.setState({CurrentW: res[0], Word: w});\r\n    //     })\r\n    // }\r\n\r\n    // Logger = e => {\r\n    //     console.log(this.state.CurrentW.shortdef);\r\n    //     console.log(this.state.Word);\r\n    // }\r\n\r\n    PlayB = e => {\r\n        this.props.pToggle();\r\n    }\r\n\r\n    gToggle = e => {\r\n        this.props.eToggle();\r\n    }\r\n\r\n    LiftWords(wc, ws){\r\n        this.state.WCorrect = wc;\r\n        this.state.WSkip = ws;\r\n        this.forceUpdate();\r\n        console.log(this.state.WCorrect);\r\n    }\r\n\r\n    render(){\r\n        if (this.props.sMenu && !this.props.sInstruc){\r\n            return (\r\n                <div className=\"M1\">\r\n                        <Spring\r\n                            from={{marginLeft: -500}}\r\n                            to={{marginLeft: 0}}\r\n                            config={{duration: 500}}\r\n                        >\r\n                            {props => (\r\n                                <div className=\"content\" style={props}>\r\n                                    <button className=\"mainButtons\" /*onClick={this.props.pToggle}*/ onClick={this.PlayB}>\r\n                                        Play\r\n                                    </button>\r\n                                    <button className=\"mainButtons\" onClick={this.props.iToggle}>\r\n                                        Instuctions\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                        </Spring>\r\n                </div>\r\n            )\r\n        }\r\n        else if (!this.props.sMenu && this.props.sInstruc){\r\n            return(\r\n                <div className=\"M1\">\r\n                    <div className=\"content\">\r\n                        <Instructions />\r\n                        {/* <h1>\r\n                            Instructions\r\n                        </h1>\r\n                        <p>\r\n                            You will be given various definitions for words, and your job is to type in the word that matches\r\n                            the definition.\r\n                        </p>\r\n                        <p>\r\n                            [Enter] submits your guess\r\n                        </p>\r\n                        <p>\r\n                            [Space] will skip the word\r\n                        </p> */}\r\n                        <Spring\r\n                            from={{marginLeft: -500}}\r\n                            to={{marginLeft: 0}}\r\n                            config={{duration: 500}}\r\n                        >\r\n                            {props => (\r\n                                <div style={props}>\r\n                                    <button className=\"mainButtons\" onClick={this.props.iToggle}>\r\n                                        Return\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                        </Spring>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.props.sPlay){\r\n            return(\r\n                <div className=\"M1\" id=\"gamePlay\">\r\n                    <PArea Finish={this.gToggle} LiftWords={(wc, ws) => this.LiftWords(wc, ws)}/>\r\n                    {/* <WordDisplay Info={this.state.CurrentW}/>\r\n                    <h1>Play</h1>\r\n                    <PInput TrueWord={this.state.Word} /> */}\r\n                    {/* <button onClick={this.Checker}>Check</button>\r\n                    <button onClick={this.Logger}>Log</button> */}\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.props.showEnd){\r\n            return(\r\n                <div>\r\n                    {React.createElement('h1', null, `Words Correct: ${this.state.WCorrect.length}`)}\r\n                    <ul>\r\n                        {this.state.WCorrect.map(item =>\r\n                            <li key=\"{item}\">{item}</li>)\r\n                        }\r\n                    </ul>\r\n\r\n                    {React.createElement('h1', null, `Words Skipped: ${this.state.WSkip.length}`)}\r\n                    <ul>\r\n                        {this.state.WSkip.map(item =>\r\n                            <li key={item}>{item}</li>)\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Meat1;","D:\\wordG\\word-guess\\src\\Modules\\instruc.js",[],"D:\\wordG\\word-guess\\src\\Modules\\Menu.js",[],"D:\\wordG\\word-guess\\src\\Modules\\word.js",[],"D:\\wordG\\word-guess\\src\\Modules\\Def.js",[],"D:\\wordG\\word-guess\\src\\Modules\\DisplayW.js",["67"],"import React from 'react'\r\nimport '../styler/dStyler.css'\r\nimport Spring from 'react-spring/renderprops'\r\n\r\nexport default function DisplayW(props) {\r\n    // var x = [];\r\n    // for (let index = 0; index < Math.min(Info.Info[0].shortdef.length, 3); index++) {\r\n    //     x.push(React.createElement('p', null, `Definition: ${Info.Info[0].shortdef[index]}`));\r\n    // }\r\n    if (props.Info !== null){\r\n        var x = [];\r\n        let pSpeech = null;\r\n        // for (let index = 0; index < Math.min(props.Info[0].shortdef.length, 3); index++) {\r\n        //     x.push(React.createElement(\"p\", null, `Definition: ${props.Info[0].shortdef}`));\r\n        // }\r\n        for (let index = 0; index < props.Info.length; index++){\r\n            if (props.Info[index].shortdef.length >= 1){\r\n                for (let j = 0; j < Math.min(props.Info[index].shortdef.length, 3); j++){\r\n                    x.push(React.createElement(\"p\", null, `${props.Info[index].shortdef[j]}`));\r\n                }\r\n                pSpeech = props.Info[index].fl;\r\n                break;\r\n            }\r\n        }\r\n        return(\r\n            <div id=\"defineArea\">\r\n                <h1>Part of Speech:</h1>\r\n                <h3>{pSpeech}</h3>\r\n                {x.map(item => <p className=\"definitions\"><strong>Definition:</strong>{item}</p>)}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\wordG\\word-guess\\src\\Modules\\PlayerInput.js",["68"],"D:\\wordG\\word-guess\\src\\Modules\\PlayArea.js",["69","70","71"],"D:\\wordG\\word-guess\\src\\Modules\\Hint.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":21,"column":8,"nodeType":"78","messageId":"79","endLine":21,"endColumn":15},{"ruleId":"76","severity":1,"message":"80","line":22,"column":8,"nodeType":"78","messageId":"79","endLine":22,"endColumn":19},{"ruleId":"76","severity":1,"message":"81","line":23,"column":18,"nodeType":"78","messageId":"79","endLine":23,"endColumn":28},{"ruleId":"76","severity":1,"message":"82","line":23,"column":30,"nodeType":"78","messageId":"79","endLine":23,"endColumn":38},{"ruleId":"76","severity":1,"message":"83","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":10},{"ruleId":"76","severity":1,"message":"84","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":10},{"ruleId":"76","severity":1,"message":"85","line":4,"column":14,"nodeType":"78","messageId":"79","endLine":4,"endColumn":18},{"ruleId":"76","severity":1,"message":"86","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":19},{"ruleId":"76","severity":1,"message":"87","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":47,"column":9,"nodeType":"90","endLine":47,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":48,"column":9,"nodeType":"90","endLine":48,"endColumn":19},{"ruleId":"76","severity":1,"message":"91","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},{"ruleId":"76","severity":1,"message":"92","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"85","line":3,"column":14,"nodeType":"78","messageId":"79","endLine":3,"endColumn":18},{"ruleId":"76","severity":1,"message":"93","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":30,"column":13,"nodeType":"90","endLine":30,"endColumn":23},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Instruc' is defined but never used.","Identifier","unusedVar","'MenuDisplay' is defined but never used.","'Transition' is defined but never used.","'animated' is defined but never used.","'RW' is defined but never used.","'GD' is defined but never used.","'GDef' is defined but never used.","'WordDisplay' is defined but never used.","'PInput' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Spring' is defined but never used.","'useEffect' is defined but never used.","'ReactDom' is defined but never used.","no-global-assign","no-unsafe-negation"]